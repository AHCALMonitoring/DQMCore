  /// \file DQMLogging.h
/*
 *
 * DQMLogging.h header template automatically generated by a class generator
 * Creation date : ven. oct. 31 2014
 *
 * This file is part of DQM4HEP libraries.
 * 
 * DQM4HEP is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * DQM4HEP is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with DQM4HEP.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * @author Remi Ete
 * @copyright CNRS , IPNL
 */


#ifndef DQMLOGGING_H
#define DQMLOGGING_H

#include "streamlog/streamlog.h"

#define streamlog_init( head , verbosity ) \
    streamlog::out.init(std::cout, head ); \
    streamlog::out.addLevelName<DEBUG>() ; \
    streamlog::out.addLevelName<DEBUG0>() ; \
    streamlog::out.addLevelName<DEBUG1>() ; \
    streamlog::out.addLevelName<DEBUG2>() ; \
    streamlog::out.addLevelName<DEBUG3>() ; \
    streamlog::out.addLevelName<DEBUG4>() ; \
    streamlog::out.addLevelName<DEBUG5>() ; \
    streamlog::out.addLevelName<DEBUG6>() ; \
    streamlog::out.addLevelName<DEBUG7>() ; \
    streamlog::out.addLevelName<DEBUG8>() ; \
    streamlog::out.addLevelName<DEBUG9>() ; \
    streamlog::out.addLevelName<MESSAGE>() ; \
    streamlog::out.addLevelName<MESSAGE0>() ; \
    streamlog::out.addLevelName<MESSAGE1>() ; \
    streamlog::out.addLevelName<MESSAGE2>() ; \
    streamlog::out.addLevelName<MESSAGE3>() ; \
    streamlog::out.addLevelName<MESSAGE4>() ; \
    streamlog::out.addLevelName<MESSAGE5>() ; \
    streamlog::out.addLevelName<MESSAGE6>() ; \
    streamlog::out.addLevelName<MESSAGE7>() ; \
    streamlog::out.addLevelName<MESSAGE8>() ; \
    streamlog::out.addLevelName<MESSAGE9>() ; \
    streamlog::out.addLevelName<WARNING>() ; \
    streamlog::out.addLevelName<WARNING0>() ; \
    streamlog::out.addLevelName<WARNING1>() ; \
    streamlog::out.addLevelName<WARNING2>() ; \
    streamlog::out.addLevelName<WARNING3>() ; \
    streamlog::out.addLevelName<WARNING4>() ; \
    streamlog::out.addLevelName<WARNING5>() ; \
    streamlog::out.addLevelName<WARNING6>() ; \
    streamlog::out.addLevelName<WARNING7>() ; \
    streamlog::out.addLevelName<WARNING8>() ; \
    streamlog::out.addLevelName<WARNING9>() ; \
    streamlog::out.addLevelName<ERROR>() ; \
    streamlog::out.addLevelName<ERROR0>() ; \
    streamlog::out.addLevelName<ERROR1>() ; \
    streamlog::out.addLevelName<ERROR2>() ; \
    streamlog::out.addLevelName<ERROR3>() ; \
    streamlog::out.addLevelName<ERROR4>() ; \
    streamlog::out.addLevelName<ERROR5>() ; \
    streamlog::out.addLevelName<ERROR6>() ; \
    streamlog::out.addLevelName<ERROR7>() ; \
    streamlog::out.addLevelName<ERROR8>() ; \
    streamlog::out.addLevelName<ERROR9>() ; \
    streamlog::out.addLevelName<SILENT>() ; \
    streamlog::logscope scope(streamlog::out);\
    scope.setLevel(verbosity);


#endif  //  DQMLOGGING_H
