  /// \file DQMRunControlClient.h
/*
 *
 * DQMRunControlClient.h header template automatically generated by a class generator
 * Creation date : mer. nov. 12 2014
 *
 * This file is part of DQM4HEP libraries.
 * 
 * DQM4HEP is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * DQM4HEP is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with DQM4HEP.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * @author Remi Ete
 * @copyright CNRS , IPNL
 */


#ifndef DQMRUNCONTROLCLIENT_H
#define DQMRUNCONTROLCLIENT_H

// -- dqm4hep headers
#include "dqm4hep/DQM4HEP.h"

// -- dim headers
#include "dic.hxx"

namespace dqm4hep
{

class DQMRunControl;
class DQMRun;

/** DQMRunControlClient class
 */ 
class DQMRunControlClient : public DimClient
{
public:
	/** Constructor
	 */
	DQMRunControlClient();

	/** Destructor
	 */
	~DQMRunControlClient();

	/** Connect to the service.
	 */
	StatusCode connectToService();

	/** Disconnect from the service
	 */
	StatusCode disconnectFromService();

	/** Whether the client is connected to the service
	 */
	bool isConnectedToService() const;

	/** Set the run control name
	 */
	StatusCode setRunControlName(const std::string &runControlName);

	/** Get the current run number
	 */
	unsigned int getCurrentRunNumber() const;

	/** Take the current run header. Pointer member is set to NULL.
	 */
	DQMRun *const getCurrentRun() const;

	/** Get the run state (running or not)
	 */
	DQMState getRunState() const;

	/** Whether a run has been started.
 	 */
	bool isRunning() const;

protected:
	/** Call-back function from dim client
	 */
	void infoHandler();


	// runtime
	bool             m_isConnected;

	// run control
	DQMRunControl    *m_pRunControl;
	std::string       m_runControlName;
	DimInfo          *m_pStartOfRunInfo;
	DimInfo          *m_pEndOfRunInfo;
}; 

} 

#endif  //  DQMRUNCONTROLCLIENT_H
