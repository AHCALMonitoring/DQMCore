  /// \file DQMStandaloneModuleApplication.h
/*
 *
 * DQMStandaloneModuleApplication.h header template automatically generated by a class generator
 * Creation date : mer. aoï¿½t 26 2015
 *
 * This file is part of DQM4HEP libraries.
 * 
 * DQM4HEP is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * DQM4HEP is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with DQM4HEP.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * @author Remi Ete
 * @copyright CNRS , IPNL
 */


#ifndef DQMSTANDALONEMODULEAPPLICATION_H
#define DQMSTANDALONEMODULEAPPLICATION_H

// -- dqm4hep headers
#include "dqm4hep/DQM4HEP.h"
#include "dqm4hep/DQMModuleApplication.h"

namespace dqm4hep
{

/** DQMStandaloneModuleApplication class
 */
class DQMStandaloneModuleApplication : public DQMModuleApplication
{
public:
	/** Constructor
	 */
	DQMStandaloneModuleApplication();

	/** Destructor
	 */
	~DQMStandaloneModuleApplication();

	/** Get the application type ("AnalysisModule")
	 */
	const std::string &getType() const;

	/** Get the application name ("ModuleType/ModuleName")
	 */
	const std::string &getName() const;

	/** Read settings from a xml file.
	 *  Initialize the application. Declare all the services,
	 *  load the shared libraries, configure the active module
	 */
	StatusCode readSettings( const std::string &settingsFile );

	/** Run the application.
	 */
	StatusCode run();

	/** Whether the module application has to stop processing cycles
	 */
	bool shouldStopCycle() const;

private:

	bool                          m_stopFlag;
	bool                          m_isInitialized;

	std::string                   m_name;
	std::string                   m_type;

	bool                          m_resetAtEndOfPeriod;
	unsigned int                 m_sleepTimeBetweenTwoProcess;
	unsigned int                 m_publicationPeriod;

	StatusCode                     m_returnStatusCode;

	std::string                    m_moduleType;
	std::string                    m_moduleName;
}; 

} 

#endif  //  DQMSTANDALONEMODULEAPPLICATION_H
