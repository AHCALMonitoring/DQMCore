/*
 *
 * DQMEventCollector.h header template automatically generated by a class generator
 * Creation date : mer. sept. 9 2015
 *
 * This file is part of DQM4HEP libraries.
 * 
 * DQM4HEP is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * DQM4HEP is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with DQM4HEP.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * @author Remi Ete
 * @copyright CNRS , IPNL
 */


#ifndef DQMEVENTCOLLECTOR_H
#define DQMEVENTCOLLECTOR_H

// -- dqm4hep headers
#include "dqm4hep/DQM4HEP.h"

namespace dqm4hep
{

class DQMEventCollectorImp;

/** DQMEventCollector class
 */ 
class DQMEventCollector 
{
public:
	/** Constructor
	 */
	DQMEventCollector();

	/** Constructor with collector implementation
	 */
	DQMEventCollector(DQMEventCollectorImp *pCollectorImp);

	/** Destructor
	 */
	~DQMEventCollector();

	/** Set the collctor name
	 */
	StatusCode setCollectorName(const std::string &collectorName);

	/** Get the collector name
	 */
	const std::string &getCollectorName() const;

	/** Whether the collector server is running
	 */
	bool isRunning() const;

	/** Start the collector server
	 */
	StatusCode startCollector();

	/** Stop the collector server
	 */
	StatusCode stopCollector();

	/** Set the event collector implementation
	 */
	void setEventCollectorImp(DQMEventCollectorImp *pCollectorImp);

	/** Set the event streamer to serialize/deserialize the in/out-coming events
	 */
	void setEventStreamer(DQMEventStreamer *pEventStreamer);

	/** Get the event streamer
	 */
	DQMEventStreamer *getEventStreamer() const;

private:

	DQMEventCollectorImp *m_pCollectorImp;
};

} 

#endif  //  DQMEVENTCOLLECTOR_H
