  /// \file DQMModule.cc
/*
 *
 * DQMModule.cc source template automatically generated by a class generator
 * Creation date : ven. sept. 5 2014
 *
 * This file is part of DQM4HEP libraries.
 * 
 * DQM4HEP is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * DQM4HEP is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with DQM4HEP.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * @author Remi Ete
 * @copyright CNRS , IPNL
 */

// -- dqm4hep headers
#include "dqm4hep/DQMModule.h"
#include "dqm4hep/DQMModuleApplication.h"

namespace dqm4hep
{

DQMModule::DQMModule( const std::string &type ) :
		DQMPlugin( type ),
		m_name( "" ),
		m_pModuleApplication(NULL)
{
	/* nop */
}

//-------------------------------------------------------------------------------------------------

DQMModule::~DQMModule()
{
	/* nop */
}

//-------------------------------------------------------------------------------------------------

void DQMModule::setName( const std::string &name )
{
	m_name = name;
}

//-------------------------------------------------------------------------------------------------

const std::string &DQMModule::getName() const
{
	return m_name;
}

//-------------------------------------------------------------------------------------------------

const std::string &DQMModule::getType() const
{
	return this->getPluginName();
}

//-------------------------------------------------------------------------------------------------

const std::string &DQMModule::getDetectorName() const
{
	return m_detectorName;
}

//-------------------------------------------------------------------------------------------------

void DQMModule::setDetectorName( const std::string &detectorName )
{
	m_detectorName = detectorName;
}

//-------------------------------------------------------------------------------------------------

DQMModuleApplication *DQMModule::getModuleApplication() const
{
	return m_pModuleApplication;
}

//-------------------------------------------------------------------------------------------------

void DQMModule::setModuleApplication(DQMModuleApplication *pModuleApplication)
{
	m_pModuleApplication = pModuleApplication;
}

} 

